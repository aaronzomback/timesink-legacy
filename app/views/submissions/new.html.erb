<h2>Film submission</h2>
<h3>$10</h3>

<form action="/submissions" method="post" id="new_submission">
  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
  <input type="hidden" name="submission[stripe_payment_id]" id="payment">

  <div class="field">
    <label for="title">Title</label>
    <input type="text" name="submission[title]" id="title" value="Test Submission">
  </div>

  <div class="field">
    <div id="card"></div>
  </div>

  <div id="card-errors">
    <% @submission.errors[:stripe_payment_id].each do |message| %>
<p class="error"><%= message %></p>
<% end %>
  </div>


  <input type="submit" value="Create Submission">
</form>




<script charset="utf-8">
  var stripe = Stripe('<%= Rails.application.credentials[Rails.env.to_sym][:stripe_public_key] %>');
    // load the fonts in
  var fonts = [{
    cssSrc: "https://fonts.googleapis.com/css?family=Karla",
  }];
  // styles for the stripe inputs
  var styles = {
    base: {
      iconColor: "#F5F7F9",
      color: "#F5F7F9",
      fontFamily: "Spectral",
      fontSize: "16px",

      "::placeholder": {
        color: "#F5F7F9"
      },
      ":-webkit-autofill": {
        color: "#F5F7F9"
      }
    },
    invalid: {
      iconColor: "#F5F7F9",
      color: "#261ce9"
    }
  }

  var elements = stripe.elements();
  var cardElement = elements.create('card', {style: styles});
  cardElement.mount('#card');

  const form = document.querySelector('#new_submission');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    // Step 1: POST request to create payment intent
    fetch('/payment_intents', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        authenticity_token: '<%= form_authenticity_token %>',
      }),
    })
    .then((response) => response.json())
    .then((paymentIntent) => {
      // Step 2: Create payment method and confirm payment intent.
      stripe.confirmCardPayment(
        paymentIntent.client_secret, {
          payment_method: {
            card: cardElement
          }
        }
      ).then((resp) => {
        if (resp.error) {
          $("#card-errors").html(resp.error.message)
        } else {
          // Step 3: Embed payment ID in form
          const paymentIdInput = document.querySelector('#payment');
          paymentIdInput.value = paymentIntent.id;
          form.submit();
        }
      })
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  });

  console.log("Success!")
</script>
