<div class="donation-grid">

<section class="donation-form">
<form action="/donations" method="post" id="new_donation">
  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
  <input type="hidden" name="donation[stripe_payment_id]" id="payment">

  <div class="field">
    <label for="Name">Name</label>
    <input type="text" name="donation[name]" id="Name" placeholder="Enter your name">
  </div>

  <div class="field">
    <label for="Email">Email</label>
    <input type="text" name="donation[email]" id="Email" placeholder="Enter your email">
  </div>

  <div class="field">
    <label for="Note">Add a note (optional)</label>
    <input type="text" name="donation[note]" id="Note" placeholder="Add a special note">
  </div>



<div class="input-icon">
    <label for="Amount">Enter custom amount (i.e. $10, $25, $50, $100, etc.)</label>
<input type="number" name="donation[amount]" id="amount" step="any" class="currency" min="1" max="2500.00" placeholder="0.00">
<i class="donation-$">$</i>
</div>


<div id="card-errors">
  <% @donation.errors[:stripe_payment_id].each do |message| %>
<p class="error"><%= message %></p>
<% end %>
</div>

<div id="card" class="card-donation">
  <!-- card element appears here -->
</div>


    <input type="submit" value="Donate to TimeSink">
  </form>

  </section>


  <section class="donation-description">
  <p class="donation-proceed">Donate knowing that 100% of your funds are reinvested directly back into the TimeSink operation <br> We accept global payments and happily accept Bitcoin.</p>
  <section>

      <script>if(!window.btcpay){    var head = document.getElementsByTagName('head')[0];   var script = document.createElement('script');   script.src='https://testnet.demo.btcpayserver.org/modal/btcpay.js';   script.type = 'text/javascript';   head.append(script);}function onBTCPayFormSubmit(event){    var xhttp = new XMLHttpRequest();    xhttp.onreadystatechange = function() {        if (this.readyState == 4 && this.status == 200) {            if(this.status == 200 && this.responseText){                var response = JSON.parse(this.responseText);                window.btcpay.showInvoice(response.invoiceId);            }        }    };    xhttp.open("POST", event.target.getAttribute('action'), true);    xhttp.send(new FormData( event.target ));}</script><style type="text/css"> .btcpay-form { display: inline-flex; align-items: center; justify-content: center; } .btcpay-form--inline { flex-direction: row; } .btcpay-form--block { flex-direction: column; } .btcpay-form--inline .submit { margin-left: 15px; } .btcpay-form--block select { margin-bottom: 10px; } .btcpay-form .btcpay-custom-container{ text-align: center; }.btcpay-custom { display: flex; align-items: center; justify-content: center; } .btcpay-form .plus-minus { cursor:pointer; font-size:25px; line-height: 25px; background: #DFE0E1; height: 30px; width: 45px; border:none; border-radius: 60px; margin: auto 5px; display: inline-flex; justify-content: center; } .btcpay-form select { -moz-appearance: none; -webkit-appearance: none; appearance: none; color: currentColor; background: transparent; border:1px solid transparent; display: block; padding: 1px; margin-left: auto; margin-right: auto; font-size: 11px; cursor: pointer; } .btcpay-form select:hover { border-color: #ccc; } #btcpay-input-price { -moz-appearance: none; -webkit-appearance: none; border: none; box-shadow: none; text-align: center; font-size: 25px; margin: auto; border-radius: 5px; line-height: 35px; background: #fff; } </style>
    <style type="text/css"> input[type=range].btcpay-input-range { -webkit-appearance:none; width:100%; background: transparent; } input[type=range].btcpay-input-range:focus { outline:0; } input[type=range].btcpay-input-range::-webkit-slider-runnable-track { width:100%; height:3.1px; cursor:pointer; box-shadow:0 0 1.7px #020,0 0 0 #003c00; background:#f3f3f3; border-radius:1px; border:0; } input[type=range].btcpay-input-range::-webkit-slider-thumb { box-shadow:none; border:2.5px solid #cedc21; height:22px; width:22px; border-radius:50%; background: orange; cursor:pointer; -webkit-appearance:none; margin-top:-9.45px } input[type=range].btcpay-input-range:focus::-webkit-slider-runnable-track { background:#fff; } input[type=range].btcpay-input-range::-moz-range-track { width:100%; height:3.1px; cursor:pointer; box-shadow:0 0 1.7px #020,0 0 0 #003c00; background:#f3f3f3; border-radius:1px; border:0; } input[type=range].btcpay-input-range::-moz-range-thumb { box-shadow:none; border:2.5px solid #cedc21; height:22px; width:22px; border-radius:50%; background: orange; cursor:pointer; } input[type=range].btcpay-input-range::-ms-track { width:100%; height:3.1px; cursor:pointer; background:0 0; border-color:transparent; color:transparent; } input[type=range].btcpay-input-range::-ms-fill-lower { background:#e6e6e6; border:0; border-radius:2px; box-shadow:0 0 1.7px #020,0 0 0 #003c00; } input[type=range].btcpay-input-range::-ms-fill-upper { background:#f3f3f3; border:0; border-radius:2px; box-shadow:0 0 1.7px #020,0 0 0 #003c00; } input[type=range].btcpay-input-range::-ms-thumb { box-shadow:none; border:2.5px solid #cedc21; height:22px; width:22px; border-radius:50%; background:orange; cursor:pointer; height:3.1px; } input[type=range].btcpay-input-range:focus::-ms-fill-lower { background:#f3f3f3; } input[type=range].btcpay-input-range:focus::-ms-fill-upper { background:#fff; } </style>
    <form method="POST"  onsubmit="onBTCPayFormSubmit(event);return false"  action="https://testnet.demo.btcpayserver.org/api/v1/invoices" class="btcpay-form btcpay-form--block">
      <input type="hidden" name="storeId" value="Ame7g6yGGAKnNrbg9VGYoonjo6LWwMqzr1CK48WD2diA" />
      <input type="hidden" name="jsonResponse" value="true" />
      <div class="btcpay-custom-container">
        <input id="btcpay-input-price" name="price" type="text" min="0" max="none" step="any" value="10" style="width: 209px;" oninput="event.preventDefault();isNaN(event.target.value) || event.target.value <= 0 ? document.querySelector('#btcpay-input-price').value = 10 : event.target.value" onchange="document.querySelector('#btcpay-input-range').value = document.querySelector('#btcpay-input-price').value" />
        <select name="currency">
          <option value="USD" selected>USD</option>
          <option value="GBP">GBP</option>
          <option value="EUR">EUR</option>
          <option value="BTC">BTC</option>
        </select>
        <input class="btcpay-input-range" id="btcpay-input-range" value="10" type="range" min="1" max="500" step="1" style="width:80px;margin-bottom:15px;background-color:dodgerblue;" oninput="document.querySelector('#btcpay-input-price').value = document.querySelector('#btcpay-input-range').value" />
      </div>
    <button type="submit" class="submit-btc" name="submit" style="min-width:80px; min-height:24px; border-radius: 4px;border-style: none;background-color: #ffa711;" alt="Pay with BtcPay, Self-Hosted Bitcoin Payment Processor"><span style="color:#fff">Donate with</span>
    <img src="https://en.bitcoin.it/w/images/en/5/5b/Bitcoin_accepted_here_sign_horizontal2.png" style="height:57px;display:inline-block;padding: 5% 0 5% 5px;">
    </button></form>
  </section>
  </section>




</div>






<script charset="utf-8">
  (function(){

    $(document).ready(function () {
        $(".amount").change(function() {
            $(this).val(parseFloat($(this).val()).toFixed(2));
        });
    });

  var stripe = Stripe('<%= Rails.application.credentials[Rails.env.to_sym][:stripe_public_key] %>');
    // load the fonts in
  var fonts = [{
    cssSrc: "https://fonts.googleapis.com/css?family=Karla",
  }];
  // styles for the stripe inputs
  var styles = {
    base: {
      iconColor: "#cccccc",
      color: "#ffffff",
      fontFamily: "Spectral",
      fontSize: "14px",
      fontSmoothing: 'antialiased',
      borderColor: "#ffffff",

      "::placeholder": {
        color: "#ccc"
      },
      ":-webkit-autofill": {
        color: "#ccc"
      }
    },
    invalid: {
      iconColor: "#FFC7EE",
      color: "#A31621"
    }
  }

  var elements = stripe.elements();
  var cardElement = elements.create('card', {style: styles});
  cardElement.mount('#card');

  const form = document.querySelector('#new_donation');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    // Step 1: POST request to create payment intent
    fetch('/payment_intents_donations', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        authenticity_token: '<%= form_authenticity_token %>',
        amount: document.getElementById('amount').value
      }),
    })
    .then((response) => response.json())
    .then((paymentIntent) => {
      // Step 2: Create payment method and confirm payment intent.
      stripe.confirmCardPayment(
        paymentIntent.client_secret, {
          payment_method: {
            card: cardElement
          }
        }
      ).then((resp) => {
        if (resp.error) {
          $("#card-errors").html(resp.error.message)
        } else {
          // Step 3: Embed payment ID in form
          const paymentIdInput = document.querySelector('#payment');
          paymentIdInput.value = paymentIntent.id;
          form.submit();
        }
      })
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  });
  })();
</script>
